{
  "name": "payment-ui",
  "dependencies": [
    "react-toastify"
  ],
  "files": [
    {
      "name": "payment-ui.tsx",
      "content": "\"use client\";\nimport Image from \"next/image\";\nimport products from \"@/data/products.json\";\nimport { useTransition } from \"react\";\nimport { createOrders, verifyPayment } from \"@/registry/actions/payment-component\";\nimport { toast } from \"react-toastify\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function Razorpay() {\n  const [loading, startTransition] = useTransition();\n  const router = useRouter();\n  const product = products[0];\n\n  function handleBuy() {\n    startTransition(async () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      script.async = true;\n\n      script.onload = async () => {\n        const result = await createOrders({ productId: product.id, quantity: 1 });\n\n        if (result.error) {\n          alert(\"Error creating orders\");\n          return;\n        }\n\n        const options = {\n          key: process.env.NEXT_PUBLIC_RAZORPAY_KEY_ID,\n          amount: (product.price - product.price * (product.discount / 100)) * 100,\n          currency: \"USD\",\n          name: \"Payment Gateways Demo\",\n          image: `${process.env.NEXT_PUBLIC_BASE_URL}${product.image}`,\n          order_id: result.orderId,\n          handler: async function (response: {\n            razorpay_payment_id: string;\n            razorpay_order_id: string;\n            razorpay_signature: string;\n          }) {\n            const result = await verifyPayment(response);\n            if (result.error) {\n              toast.error(\"Payment failed\");\n              router.push(\"/payment?status=failed\");\n              return;\n            }\n            router.push(\"/payment?status=success\");\n            toast.success(\"Payment successful\");\n          },\n          prefill: {\n            name: \"Payment Gateways Demo\",\n            email: \"premprakash@example.com\",\n            contact: \"9999999999\",\n          },\n        };\n\n        const rzp = new (window as any).Razorpay(options);\n        rzp.open();\n      };\n\n      document.body.appendChild(script);\n    });\n  }\n\n  return (\n    <div className=\"h-screen w-full flex justify-center items-center\">\n      <div className=\"flex w-full max-w-xs flex-col overflow-hidden rounded-lg  bg-white dark:bg-gray-950 shadow-md\">\n        <div className=\"relative m-2 flex h-60 overflow-hidden rounded-xl\">\n          <Image\n            height={500}\n            width={500}\n            className=\"object-cover\"\n            src={product.image}\n            alt=\"product image\"\n          />\n          <span className=\"absolute top-0 left-0 m-2 rounded-full bg-black px-2 text-center text-sm font-medium text-white\">\n            {product.discount}% OFF\n          </span>\n        </div>\n        <div className=\"mt-4 px-5 pb-5\">\n          <a href=\"#\">\n            <h5 className=\"text-xl tracking-tight text-slate-900 dark:text-gray-200\">\n              {product.name}\n            </h5>\n          </a>\n          <div className=\"mt-2 mb-5 flex items-center justify-between\">\n            <p>\n              <span className=\"text-3xl font-bold text-slate-900 dark:text-gray-200\">\n                ₹{(product.price - product.price * (product.discount / 100)).toFixed(2)}\n              </span>\n              <span className=\"text-sm text-slate-900 dark:text-gray-200 line-through\">\n                ₹{product.price.toFixed(2)}\n              </span>\n            </p>\n          </div>\n          <button\n            disabled={loading}\n            onClick={handleBuy}\n            className=\"w-full rounded-md bg-slate-900 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-blue-300\"\n          >\n            {loading ? \"Loading...\" : \"Buy Now\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"
    }
  ],
  "type": "ui:payment-component"
}